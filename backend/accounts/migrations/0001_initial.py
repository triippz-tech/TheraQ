# Generated by Django 2.2.17 on 2021-01-03 03:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('image_url', models.URLField(blank=True, max_length=256, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('headline', models.CharField(blank=True, max_length=250, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=250, null=True)),
                ('nick_name', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_picture', models.CharField(blank=True, max_length=250, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=250, null=True)),
                ('twitter', models.CharField(blank=True, max_length=250, null=True)),
                ('facebook', models.CharField(blank=True, max_length=250, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User Profile',
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name': 'User Setting',
                'db_table': 'user_setting',
            },
        ),
        migrations.CreateModel(
            name='UserSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('school_name', models.CharField(blank=True, max_length=250)),
                ('program', models.CharField(blank=True, max_length=250, null=True)),
                ('degree_type', models.CharField(blank=True, choices=[('BACHELORS', 'BACHELORS'), ('MASTERS', 'MASTERS'), ('DOCTORATES', 'DOCTORATES')], max_length=25, null=True)),
                ('current_student', models.BooleanField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('graduate_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_schools', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User School',
                'db_table': 'user_school',
            },
        ),
        migrations.CreateModel(
            name='UserLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('issuing_authority', models.CharField(blank=True, max_length=250)),
                ('license_type', models.CharField(blank=True, max_length=250)),
                ('license_number', models.CharField(blank=True, max_length=250)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_licenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User License',
                'db_table': 'user_license',
            },
        ),
        migrations.CreateModel(
            name='UserEmployer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('employer_name', models.CharField(blank=True, max_length=200)),
                ('position', models.CharField(blank=True, max_length=250, null=True)),
                ('current_position', models.BooleanField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_employers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Employer',
                'db_table': 'user_employer',
            },
        ),
        migrations.CreateModel(
            name='UserCertification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('institution_name', models.CharField(max_length=250)),
                ('certificate_program', models.CharField(max_length=250)),
                ('certificate_number', models.CharField(blank=True, max_length=250, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_certifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Certification',
                'db_table': 'user_certification',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='user_profile',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='accounts.UserProfile'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_settings',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='accounts.UserSetting'),
        ),
    ]
