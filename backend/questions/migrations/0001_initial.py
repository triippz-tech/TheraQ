# Generated by Django 2.2.17 on 2020-12-28 23:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('subq', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('comment_body', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='QTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('tag_name', models.CharField(blank=True, db_index=True, max_length=50, unique=True)),
                ('slug', models.CharField(blank=True, max_length=80, unique=True)),
            ],
            options={
                'db_table': 'q_tag',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('slug', models.SlugField(max_length=80, unique=True)),
                ('post_title', models.CharField(blank=True, db_index=True, max_length=100)),
                ('post_body', models.TextField(blank=True)),
                ('subq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='subq_questions', to='subq.SubQ')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='asked_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('reply_body', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='question_replies', to='questions.Question')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='question_replies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reply',
            },
        ),
        migrations.CreateModel(
            name='ReplyVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('vote_type', models.CharField(choices=[('UP_VOTE', 'UP_VOTE'), ('DOWN_VOTE', 'DOWN_VOTE')], max_length=9)),
                ('reply', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reply_voets', to='questions.Reply')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reply_vote',
            },
        ),
        migrations.CreateModel(
            name='QuestionWatchers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchers', to='questions.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watched_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'question_watchers',
            },
        ),
        migrations.CreateModel(
            name='QuestionVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('vote_type', models.CharField(choices=[('UP_VOTE', 'UP_VOTE'), ('DOWN_VOTE', 'DOWN_VOTE')], max_length=9)),
                ('question', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='question_votes', to='questions.Question')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'question_vote',
            },
        ),
        migrations.CreateModel(
            name='QuestionViews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_views', to='questions.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewed_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'question_views',
            },
        ),
        migrations.CreateModel(
            name='CommentVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('vote_type', models.CharField(choices=[('UP_VOTE', 'UP_VOTE'), ('DOWN_VOTE', 'DOWN_VOTE')], max_length=9)),
                ('comment', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='comment_votes', to='questions.Comment')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comment_vote',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='question_comments', to='questions.Question'),
        ),
        migrations.AddField(
            model_name='comment',
            name='reply',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reply_comments', to='questions.Reply'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='QuestionQtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('qtag', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='question_tags', to='questions.QTag')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='question_tags', to='questions.Question')),
            ],
            options={
                'db_table': 'question_qtag',
                'unique_together': {('question', 'qtag')},
            },
        ),
    ]
